<.header>
  {@tournament.name}
  <:actions>
    <.link
      href="#rounds"
      class="btn btn-secondary btn-soft"
    >
      Go to rounds
    </.link>
    <.link
      :if={@current_user_owner or @current_user_admin}
      patch={~p"/tournaments/#{@tournament}/show/edit"}
      phx-click={JS.push_focus()}
      class="btn btn-primary btn-soft"
    >
      Edit
    </.link>
  </:actions>
</.header>

<section id="summary" class="space-y-1">
  <h2>Summary</h2>
  <hr />
  <.date dt={@tournament.date} />
  <p>
    <.icon name="hero-map-pin-solid" /> {@tournament.location}
  </p>
  <p>
    <.tournament_status value={@tournament.status} />
    {if @tournament.is_top_cut_4 do
      raw("/ <span class='badge badge-neutral'>Top cut 4 enabled</span>")
    end}
  </p>
  <p>
    {@tournament.game.name} / {TournamentRenderer.render_format(@tournament.format)} / {TournamentRenderer.render_subformat(
      @tournament.subformat
    )} / {@tournament.round_count} rounds ({@tournament.round_length_minutes} minutes each)
  </p>
  <%= if @tournament.description_html != "" do %>
    <p>{raw(@tournament.description_html)}</p>
  <% else %>
    <p>{@tournament.description_raw}</p>
  <% end %>
</section>

<section id="participants">
  <h2 class="font-bold">Participants & Standings</h2>
  <.simple_form
    for={@participant_forms}
    phx-submit="update-participants"
    as_flex
    class="space-y-4"
  >
    <div
      :for={{p, index} <- Enum.with_index(@participant_forms.params["participants"])}
      id={"form-participant-#{p["id"]}"}
      class={[
        "card bg-base-100 shadow-md",
        @tournament.status == :finished && index == 0 &&
          "border-2 border-success",
        p["is_dropped"] && "bg-error"
      ]}
    >
      <div class="card-body">
        <input type="hidden" name={"participant-id-#{p["id"]}"} value={p["id"]} class="input" />
        <span class={[
          "badge font-mono",
          case index do
            0 ->
              if @tournament.status == :finished do
                "badge-success font-bold"
              else
                "badge-success"
              end

            _ ->
              "badge-secondary"
          end
        ]}>
          <%= if @tournament.status == :finished do %>
            Winner
          <% else %>
            #{index + 1}
          <% end %>
        </span>
        <div class="flex justify-between">
          <p class="font-semibold">
            {if p["name"] do
              "Name: #{p["name"]}"
            else
              "No name"
            end}
          </p>
          <p class="self-end grow-0">
            Win rate:
            <%= if p["scores"] do %>
              <span>
                {Decimal.round(p["scores"].total_score, 2)} / {Decimal.round(
                  p["scores"].win_rate,
                  2
                )}%
              </span>
            <% else %>
              <span>
                0.00 / 0.00%
              </span>
            <% end %>
          </p>
        </div>
        <.participant_decklist decklist={p["decklist"]} />
        <%= if @current_user_owner or @current_user_admin do %>
          <div>
            <p class="divider font-mono">Admin actions</p>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
              <.input
                type="text"
                label="Participant name"
                id={"form-participant-name-#{p["id"]}"}
                name={"form-participant-name-#{p["id"]}"}
                value={p["name"]}
                placeholder="Enter a name here"
              />
              <.input
                type="url"
                label="Decklist URL"
                id={"form-participant-decklist-#{p["id"]}"}
                name={"form-participant-decklist-#{p["id"]}"}
                value={p["decklist"]}
                placeholder="Enter a decklist here"
              />
            </div>
            <.link
              phx-click={
                JS.push("delete-participant", value: %{id: p["id"]})
                |> hide("##{p["id"]}")
              }
              data-confirm={"Are you sure? You're about to remove #{p["name"]} from the tournament."}
              class="btn btn-error btn-outline"
            >
              Delete from tournament
            </.link>
            <%!-- TODO: Implement drop logic --%>
            <%!-- <.link
              phx-click={
                JS.push("drop-participant", value: %{id: p["id"]})
                |> hide("##{p["id"]}")
              }
              data-confirm={"Are you sure? You're about to remove #{p["name"]} from the tournament."}
              class="btn btn-error btn-outline"
            >
              Drop from tournament
            </.link> --%>
          </div>
        <% end %>
      </div>
    </div>
    <p class="mt-8 mb-6 divider">Actions</p>
    <:actions :if={@current_user_owner and length(@tournament.participants) > 0}>
      <.button
        phx-disable-with="Saving..."
        data-confirm="Are you sure? You won't be able to edit names afterwards (this is a test feature to prevent cheating)"
      >
        <.icon name="hero-table-cells-solid" class="mr-1" /> Save changes
      </.button>
    </:actions>
    <:actions :if={@current_user_owner and length(@rounds) == 0}>
      <.button
        phx-click="create-participant"
        phx-disable-with="Creating..."
      >
        <.icon name="hero-plus" class="mr-1" /> Add participant
      </.button>
    </:actions>
  </.simple_form>
</section>

<section id="rounds-section">
  <h2 class="font-bold">Rounds</h2>
  <.item_grid
    :if={length(@tournament.rounds) > 0}
    id="rounds"
    items={@tournament.rounds}
    item_click={
      fn round -> JS.navigate(~p"/tournaments/#{@tournament.id}/rounds/#{round.number + 1}") end
    }
  >
    <:item :let={round}>
      <div class="flex justify-between mb-2">
        <p>
          Round
          #{round.number + 1}
        </p>
        <.round_status value={round.status} />
      </div>
      <.link
        patch={~p"/tournaments/#{@tournament.id}/rounds/#{round.number + 1}"}
        class={["p-0 btn btn-info btn-soft", round.status == :finished && ""]}
      >
        <.icon name="hero-chevron-right" /> View round
      </.link>
      <.link
        :if={@current_user_owner && @tournament.status != :finished && round.status != :finished}
        phx-click={
          JS.push("delete-round", value: %{id: round.id})
          |> hide("##{round.id}")
        }
        data-confirm="Are you sure? This action is irreversible."
        class="btn btn-error btn-soft"
      >
        Delete
      </.link>
    </:item>
  </.item_grid>
  <%= if @current_user_owner && @tournament.status != :finished do %>
    <div class="space-y-4">
      <.warning :if={not @has_enough_participants?}>
        Must have at least 4 participants before starting this tournament
      </.warning>
      <.warning :if={not @all_participants_have_names?}>
        In order to begin the tournament, all participants must have names assigned to them
      </.warning>
      <.warning :if={@is_current_round_active?}>
        Finish the current round before starting a new one
      </.warning>
      <div class="flex gap-2 flex-col md:flex-row">
        <.button
          phx-click="create-round"
          phx-disable-with="Creating..."
          disabled={
            not @all_participants_have_names? or @is_current_round_active? or
              not @has_enough_participants?
          }
          class="btn-primary btn-wide btn-lg"
        >
          <%= if length(@rounds) == 0 do %>
            <.icon name="hero-rocket-launch-solid" class="mr-1" />
            Create 1st round (start tournament)
          <% else %>
            <.icon name="hero-plus" class="mr-1" />
            Begin {(@tournament.round_count == length(@rounds) + 1 && "last") || "new"} round
          <% end %>
        </.button>
      </div>
    </div>
  <% end %>
</section>

<.modal
  :if={@live_action == :edit}
  id="tournament-modal"
  show
  on_cancel={JS.patch(~p"/tournaments/#{@tournament}")}
>
  <.live_component
    module={MtgFriendsWeb.TournamentLive.TournamentEditFormComponent}
    current_user={@current_user}
    id={@tournament.id}
    title={@page_title}
    action={@live_action}
    tournament={@tournament}
    patch={~p"/tournaments/#{@tournament}"}
  />
</.modal>

<.modal
  :if={@live_action == :end}
  id="tournament-end-modal"
  show
  on_cancel={JS.patch(~p"/tournaments/#{@tournament}")}
>
  <.live_component
    module={MtgFriendsWeb.TournamentLive.TournamentEndFormComponent}
    current_user={@current_user}
    id={@tournament.id}
    title={@page_title}
    action={@live_action}
    tournament={@tournament}
    patch={~p"/tournaments/#{@tournament.id}/show/end"}
  />
</.modal>

<.back navigate={~p"/tournaments"}>All tournaments</.back>
