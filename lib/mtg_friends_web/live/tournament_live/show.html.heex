<.header>
  {@tournament.name}
  <:actions :if={@current_user_owner or @current_user_admin}>
    <.link
      patch={~p"/tournaments/#{@tournament}/show/edit"}
      phx-click={JS.push_focus()}
      class="cta-subtle"
    >
      Edit
    </.link>
  </:actions>
</.header>

<section id="summary" class="text-zinc-600">
  <h2>Summary</h2>
  <hr />
  <div class="flex flex-col md:flex-row justify-between">
    <.date dt={@tournament.date} />
    <p>
      <.icon name="hero-map-pin-solid" /> {@tournament.location}
    </p>
  </div>
  <p>
    {@tournament.game.name} / {TournamentRenderer.render_format(@tournament.format)} / {TournamentRenderer.render_subformat(
      @tournament.subformat
    )} / {@tournament.round_count} rounds ({@tournament.round_length_minutes} minutes each) {if @tournament.is_top_cut_4 do
      raw(" <span class='inline-block badge'>Top cut 4 enabled</span>")
    end}
  </p>
  <p>Status: <.tournament_status value={@tournament.status} /></p>
  <h3>Description</h3>
  <%= if @tournament.description_html != "" do %>
    <p>{raw(@tournament.description_html)}</p>
  <% else %>
    <p>{@tournament.description_raw}</p>
  <% end %>
</section>

<div class="overflow-x-auto">
  <table class="table">
    <!-- head -->
    <thead>
      <tr>
        <th><.icon name="hero-trophy" /></th>
        <th>Name</th>
        <th>Points</th>
        <th>Win %</th>
        <th>Decklist</th>
        <th></th>
      </tr>
    </thead>
    <tbody>
      <%!-- TODO: Fill this up elsewhere --%>
      <tr
        :for={{p, index} <- Enum.with_index(@participant_forms.params["participants"])}
        id={"form-participant-#{p["id"]}"}
      >
        <th>#{index + 1}</th>
        <td>{p["name"]}</td>
        <td>{p["score"]}</td>
        <td>{p["decklist"]}</td>
      </tr>
    </tbody>
  </table>
</div>

<section id="participants">
  <h2 class="font-bold">Participants & Standings</h2>
  <div id="participant-header" class="participant-grid-header participant-grid">
    <p><.icon name="hero-trophy" /></p>
    <p>Name</p>
    <p class="text-center">Points</p>
    <p class="text-center">Win %</p>
    <p>Decklist</p>
    <p class="hidden md:block" />
  </div>
  <hr />
  <.simple_form
    for={@participant_forms}
    phx-submit="update-participants"
    as_flex
    class="!space-y-3"
  >
    <div
      :for={{p, index} <- Enum.with_index(@participant_forms.params["participants"])}
      id={"form-participant-#{p["id"]}"}
      class={[
        "participant-grid px-2 py-1",
        @tournament.status == :finished && index == 0 &&
          "bg-green-200 border rounded-lg border-green-200",
        p["is_dropped"] && "bg-red-200"
      ]}
    >
      <input type="hidden" name={"participant-id-#{p["id"]}"} value={p["id"]} />
      <p class="text-zinc-600 font-mono w-[2rem]">
        #{index + 1}
      </p>
      <div class="self-center mr-2 flex">
        <%= if @current_user_admin do %>
          <.input type="text" name={"form-participant-name-#{p["id"]}"} value={p["name"]} />
        <% else %>
          <%= if p["name"] do %>
            <p>{p["name"]}</p>
          <% else %>
            <.input type="text" name={"form-participant-name-#{p["id"]}"} value={p["name"]} />
          <% end %>
        <% end %>
      </div>
      <%= if p["scores"] do %>
        <p class="score">
          {Decimal.round(p["scores"].total_score, (@toggle_score_decimals && 0) || 3)}
        </p>
        <p class="score">
          {Decimal.round(
            p["scores"].win_rate,
            (@toggle_score_decimals && 0) || 2
          )}%
        </p>
      <% else %>
        <%= if @toggle_score_decimals do %>
          <p class="score">
            0
          </p>
          <p class="score">
            0%
          </p>
        <% else %>
          <p class="score">
            0.00
          </p>
          <p class="score">
            0.00%
          </p>
        <% end %>
      <% end %>
      <div class="self-center">
        <%= if @current_user_owner do %>
          <.input type="text" name={"form-participant-decklist-#{p["id"]}"} value={p["decklist"]} />
        <% else %>
          <.participant_decklist decklist={p["decklist"]} />
        <% end %>
      </div>
      <div
        :if={@current_user_owner or @current_user_admin}
        class="hidden md:flex md:justify-center md:items-center"
      >
        <.link
          phx-click={
            JS.push("delete-participant", value: %{id: p["id"]})
            |> hide("##{p["id"]}")
          }
          data-confirm={"Are you sure? You're about to delete #{p["name"]}"}
          class="text-zinc-400 font-medium"
        >
          Delete
        </.link>
      </div>
    </div>
    <:actions :if={@current_user_owner and length(@tournament.participants) > 0}>
      <.button
        phx-disable-with="Saving..."
        data-confirm="Are you sure? You won't be able to edit names afterwards (this is a test feature to prevent cheating)"
      >
        <.icon name="hero-table-cells-solid" class="mr-1" /> Save changes
      </.button>
    </:actions>
    <:actions :if={@current_user_owner and length(@rounds) == 0}>
      <.button phx-click="create-participant" phx-disable-with="Creating...">
        <.icon name="hero-plus" class="mr-1" /> Add participant
      </.button>
    </:actions>
  </.simple_form>
  <div class="mt-2">
    <.button phx-click="toggle-score-decimals" phx-disable-with="Toggling..." class="cta-subtle">
      Toggle score decimals
    </.button>
  </div>
</section>

<section id="rounds">
  <h2 class="font-bold">Rounds</h2>
  <.item_grid
    :if={length(@tournament.rounds) > 0}
    id="rounds"
    items={@tournament.rounds}
    item_click={
      fn round -> JS.navigate(~p"/tournaments/#{@tournament.id}/rounds/#{round.number + 1}") end
    }
  >
    <:item :let={round}>
      <div class="flex justify-between">
        <p class={round.status == :finished && "text-zinc-500"}>
          Round
          #{round.number + 1}
        </p>
        <.round_status value={round.status} />
      </div>
      <.link
        patch={~p"/tournaments/#{@tournament.id}/rounds/#{round.number + 1}"}
        class={["p-0", round.status == :finished && "text-zinc-500"]}
      >
        <.icon name="hero-chevron-right" /> View round
      </.link>
      <.link
        :if={@current_user_owner && @tournament.status != :finished && round.status != :finished}
        phx-click={
          JS.push("delete-round", value: %{id: round.id})
          |> hide("##{round.id}")
        }
        data-confirm="Are you sure? This action is irreversible."
        class="text-zinc-400 font-medium"
      >
        Delete
      </.link>
    </:item>
  </.item_grid>
  <%= if @current_user_owner && @tournament.status != :finished do %>
    <div class="space-y-4">
      <.warning :if={not @has_enough_participants?}>
        Must have at least 4 participants before starting this tournament
      </.warning>
      <.warning :if={not @all_participants_have_names?}>
        In order to begin the tournament, all participants must have names assigned to them
      </.warning>
      <.warning :if={@is_current_round_active?}>
        There can only be 1 active round at a time
      </.warning>
      <div class="flex gap-2 flex-col md:flex-row">
        <.button
          phx-click="create-round"
          phx-disable-with="Creating..."
          disabled={
            not @all_participants_have_names? or @is_current_round_active? or
              not @has_enough_participants?
          }
        >
          <%= if length(@rounds) == 0 do %>
            <.icon name="hero-rocket-launch-solid" class="mr-1" />
            Create 1st round (start tournament)
          <% else %>
            <.icon name="hero-plus" class="mr-1" />
            Create {(@tournament.round_count == length(@rounds) + 1 && "last") || "new"} round
          <% end %>
        </.button>
      </div>
    </div>
  <% end %>
</section>

<.modal
  :if={@live_action == :edit}
  id="tournament-modal"
  show
  on_cancel={JS.patch(~p"/tournaments/#{@tournament}")}
>
  <.live_component
    module={MtgFriendsWeb.TournamentLive.TournamentEditFormComponent}
    current_user={@current_user}
    id={@tournament.id}
    title={@page_title}
    action={@live_action}
    tournament={@tournament}
    patch={~p"/tournaments/#{@tournament}"}
  />
</.modal>

<.modal
  :if={@live_action == :end}
  id="tournament-end-modal"
  show
  on_cancel={JS.patch(~p"/tournaments/#{@tournament}")}
>
  <.live_component
    module={MtgFriendsWeb.TournamentLive.TournamentEndFormComponent}
    current_user={@current_user}
    id={@tournament.id}
    title={@page_title}
    action={@live_action}
    tournament={@tournament}
    patch={~p"/tournaments/#{@tournament.id}/show/end"}
  />
</.modal>

<.back navigate={~p"/tournaments"}>All tournaments</.back>
