<.header class="mb-4">
  {@tournament_name}
  <:subtitle>
    Round #{@round_number + 1} / <.round_status value={@round_status} />
  </:subtitle>
</.header>

<%= if @round_status == :active do %>
  <section id="timer">
    <.round_timer
      seconds_left={@round_countdown_timer |> elem(0)}
      time_left={@round_countdown_timer |> elem(1)}
    />
  </section>
<% end %>
<%= if @current_user_owner and @round_status == :inactive do %>
  <section id="summary" class="p-2 alert alert-vertical alert-info alert-soft rounded-md">
    <p class="mb-2 text-xl">
      ðŸŽ‰ This round's pods have been generated! Let players know who they'll be playing against.
    </p>
    <p class="mb-4 text-xl">When all players are ready, click on <b>Start round</b> below.</p>
    <.button phx-click="start-round" phx-disable-with="Starting..." class="btn-primary">
      <.icon name="hero-rocket-launch-solid" />Start round
    </.button>
  </section>
<% end %>

<section id="pairings">
  <h2>Pairings</h2>
  <.item_grid id="pairing" items={@pairing_groups}>
    <:item :let={{pairing_number, pairing_group}} class="justify-between">
      <div>
        <h3 class="font-semibold">
          Pod #{pairing_number + 1} â€” {(@round_status == :inactive && "Waiting for start") ||
            (pairing_group.active && "In progress") ||
            "Finished"}
        </h3>
        <div
          :for={pairing <- Enum.sort_by(pairing_group.pairings, fn p -> p.points end, :desc)}
          id={"tournament-#{@tournament_id}-round-#{@round_id}-pairing-number-#{pairing_number}-#{pairing.id}"}
          class={[
            "flex justify-between items-center gap-2 py-1 px-2 rounded-md",
            (pairing.winner && "font-bold bg-success text-success-content") || ""
          ]}
        >
          <p class="flex gap-1 items-center">
            {pairing.participant.name}
            <.icon :if={pairing.winner} name="hero-trophy" />
          </p>
          <p>
            Points: {pairing.points}
          </p>
        </div>
      </div>
      <div>
        <.link
          :if={@current_user_owner && @round_status != :inactive}
          patch={
            ~p"/tournaments/#{@tournament_id}/rounds/#{@round_number + 1}/pairing/#{pairing_number + 1}/edit"
          }
          phx-click={JS.push_focus()}
          class="self-start btn btn-primary"
        >
          <%= if pairing_group.active do %>
            Assign pod results
          <% else %>
            Update pod results
          <% end %>
        </.link>
      </div>
    </:item>
  </.item_grid>
</section>

<%!-- <div :if={@current_user_owner} class="p-2 bg-yellow-50 flex flex-col space-y-3">
  <p>
    Note to organizers: This app lets you organize tournaments <b>YOUR WAY</b>, so you can assign round points however you want.
  </p>
  <p>
    If you want the round to end when a player wins, and "winners get 4 points, draws give 1 point to each player, and losers get 0 points", go. The same goes if you want to host tournaments where players get points based on their round standings (1st place: 4 points; 2nd place: 3 points; 3rd place: 2 points; 4th place: 1 point).
  </p>
  <p>The sky is the limit!</p>
</div> --%>

<.modal
  :if={@live_action == :edit}
  id={"pairing-modal-#{@selected_pairing_number}"}
  show
  on_cancel={JS.patch(~p"/tournaments/#{@tournament_id}/rounds/#{@round_number + 1}")}
>
  <.live_component
    module={MtgFriendsWeb.TournamentLive.RoundEditPairingFormComponent}
    current_user={@current_user}
    id={@selected_pairing_number}
    title={@page_title}
    action={@live_action}
    tournament_id={@tournament_id}
    round_id={@round_id}
    form={Enum.at(@forms, @selected_pairing_number - 1) |> elem(1)}
    patch={~p"/tournaments/#{@tournament_id}/rounds/#{@round_number + 1}"}
  />
</.modal>

<.warning :if={@round_status == :finished && @current_user_owner} class="text-xs">
  (ALPHA TEST NOTE) You can still edit pod results even if the round has finished
</.warning>

<.back navigate={~p"/tournaments/#{@tournament_id}"}>Tournament</.back>
