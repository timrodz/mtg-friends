<.header>
  <%= @tournament_name %> / Round #<%= @round_number + 1 %>
  <:subtitle>
    <b>Round Status</b>: <%= Utils.render_round_status(@round_status) %>
  </:subtitle>
</.header>

<.back navigate={~p"/tournaments/#{@tournament_id}"}>Back to tournament</.back>

<div id="pods" class="mt-4">
  <div :if={@current_user_owner} class="p-2 bg-emerald-100 flex flex-col space-y-3">
    <p>
      Note to organizers: This app lets you organize tournaments <b>YOUR WAY</b>, so you can assign round points however you want.
    </p>
    <p>
      If you want the round to end when a player wins, and "winners get 4 points, draws give 1 point to each player, and losers get 0 points", go. The same goes if you want to host tournaments where players get points based on their round standings (1st place: 4 points; 2nd place: 3 points; 3rd place: 2 points; 4th place: 1 point).
    </p>
    <p>The sky is the limit!</p>
  </div>
  <%= if @round_status == :active do %>
    <%= @round_countdown_timer %>
  <% end %>
  <%= if @current_user_owner and @round_status == :inactive do %>
    <div class="mt-4">
      <p class="mb-2">
        This round's pods have been generated! Let players know who they'll be playing against. When all players are ready, press the button below to start the timer.
      </p>
      <.button phx-click="start-round" phx-disable-with="Starting...">
        <.icon name="hero-rocket-launch-solid" class="mr-1" />Start round
      </.button>
    </div>
  <% end %>
  <div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-2">
    <div
      :for={{pairing_number, pairing_group} <- @pairing_groups}
      id={"tournament-#{@tournament_id}-round-#{@round_id}-pairing-number-#{pairing_number}"}
      class="border rounded-lg p-4"
    >
      <p class="font-semibold">
        Pod #<%= pairing_number + 1 %> â€” <%= (pairing_group.active && "In progress") ||
          "Finished" %>
      </p>
      <div class="grid grid-cols-1 gap-2 p-3 mb-2">
        <div
          :for={pairing <- Enum.sort_by(pairing_group.pairings, fn p -> p.points end, :desc)}
          id={"tournament-#{@tournament_id}-round-#{@round_id}-pairing-number-#{pairing_number}-#{pairing.id}"}
          class={[
            "flex justify-between items-center gap-2 py-1 px-2 rounded-md",
            (pairing.winner && "font-bold bg-green-200") || ""
          ]}
        >
          <p class="flex gap-1 items-center">
            <%= pairing.participant.name %>
            <.icon :if={pairing.winner} name="hero-trophy" />
          </p>
          <p>
            Points: <%= pairing.points %>
          </p>
        </div>
      </div>
      <.link
        :if={@current_user_owner && @round_status != :inactive}
        patch={
          ~p"/tournaments/#{@tournament_id}/rounds/#{@round_number + 1}/pairing/#{pairing_number + 1}/edit"
        }
        phx-click={JS.push_focus()}
      >
        <%= if pairing_group.active do %>
          <.button phx-disable-with="Saving...">
            Add pod results
          </.button>
        <% else %>
          <.button_secondary phx-disable-with="Saving...">
            Update pod results
          </.button_secondary>
        <% end %>
      </.link>
    </div>
  </div>

  <.modal
    :if={@live_action == :edit}
    id={"pairing-modal-#{@selected_pairing_number}"}
    show
    on_cancel={JS.patch(~p"/tournaments/#{@tournament_id}/rounds/#{@round_number + 1}")}
  >
    <.live_component
      module={MtgFriendsWeb.TournamentLive.RoundEditFormComponent}
      current_user={@current_user}
      id={@selected_pairing_number}
      title={@page_title}
      action={@live_action}
      tournament_id={@tournament_id}
      round_id={@round_id}
      form={Enum.at(@forms, @selected_pairing_number - 1) |> elem(1)}
      patch={~p"/tournaments/#{@tournament_id}/rounds/#{@round_number + 1}"}
    />
  </.modal>
</div>

<.warning :if={@round_status == :finished && @current_user_owner} class="text-xs">
  (ALPHA TEST NOTE) You can still edit pod results even if the round has finished
</.warning>
